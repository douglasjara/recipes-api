# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Home page
GET     /           controllers.HomeController.index
GET    /methods     controllers.HomeController.methods
GET    /postman     controllers.HomeController.postman

#Recipe
GET     /recipes                      controllers.RecipeController.getRecipes(request: Request, page: Int, maxRows: Int)
GET     /recipes/search               controllers.RecipeController.searchRecipes(request: Request, page: Int, maxRows: Int, title: String, ingredients: String, price: Float, kal: Integer)
GET     /recipe/:recipeId             controllers.RecipeController.getRecipe(request: Request, recipeId: Long)
POST    /recipe                       controllers.RecipeController.createRecipe(request: Request)
PUT     /recipe/:recipeId             controllers.RecipeController.updateRecipe(request: Request, recipeId: Long)
DELETE  /recipe/:recipeId             controllers.RecipeController.deleteRecipe(request: Request, recipeId: Long)

#Recipe Additional Information (1 to 1 relation)
GET     /recipe/:recipeId/additionalInformation                     controllers.AdditionalInformationController.getAdditionalInformationByRecipeId(request: Request, recipeId: Long)
GET     /recipe/additionalInformation/:additionalInformationId      controllers.AdditionalInformationController.getAdditionalInformation(request: Request, additionalInformationId: Long)
POST    /recipe/:recipeId/additionalInformation                     controllers.AdditionalInformationController.createAdditionalInformation(request: Request, recipeId: Long)
PUT     /recipe/additionalInformation/:additionalInformationId      controllers.AdditionalInformationController.updateAdditionalInformation(request: Request, additionalInformationId: Long)
#DELETE Entire recipe must be deleted to delete additionalInformation.

#Recipe Suggestions (1 to N relation)
GET     /recipe/:recipeId/suggestions           controllers.SuggestionController.getSuggestionsByRecipeId(request: Request, recipeId: Long)
GET     /recipe/suggestion/:suggestionId        controllers.SuggestionController.getSuggestion(request: Request, suggestionId: Long)
POST    /recipe/:recipeId/suggestion            controllers.SuggestionController.createSuggestion(request: Request, recipeId: Long)
PUT     /recipe/suggestion/:suggestionId        controllers.SuggestionController.updateSuggestion(request: Request, suggestionId: Long)
DELETE  /recipe/suggestion/:suggestionId        controllers.SuggestionController.deleteSuggestion(request: Request, suggestionId: Long)

#Recipe Ingredients (N to M relation)
GET     /ingredients                     controllers.IngredientController.getIngredients(request: Request, page: Int, maxRows: Int)
GET     /ingredient/:ingredientId        controllers.IngredientController.getIngredient(request: Request, ingredientId: Long)
POST    /ingredient                      controllers.IngredientController.createIngredient(request: Request)
PUT     /ingredient/:ingredientId        controllers.IngredientController.updateIngredient(request: Request, ingredientId: Long)
DELETE  /ingredient/:ingredientId        controllers.IngredientController.deleteIngredient(request: Request, ingredientId: Long)

GET     /recipe/:recipeId/ingredients                   controllers.RecipeIngredientController.getRecipeIngredientsByRecipeId(request: Request, recipeId: Long)
POST    /recipe/:recipeId/ingredient/:ingredientId      controllers.RecipeIngredientController.createRecipeIngredient(request: Request, recipeId: Long, ingredientId: Long)
PUT     /recipe/:recipeId/ingredient/:ingredientId      controllers.RecipeIngredientController.updateRecipeIngredient(request: Request, recipeId: Long, ingredientId: Long)
DELETE  /recipe/:recipeId/ingredient/:ingredientId      controllers.RecipeIngredientController.deleteRecipeIngredient(request: Request, recipeId: Long, ingredientId: Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
