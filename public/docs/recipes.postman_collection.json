{
	"info": {
		"_postman_id": "703377b7-a795-410f-9de5-12598e4032c0",
		"name": "Recipes REST API in Java, using play framework",
		"description": "This project is an example of play framework use, which manage recipes with their ingredients and suggestions. Also manage additional information of each recipe like price, calories, difficulty level, and number of guests.\n\nYou can request access to the [project in github](https://github.com/douglasjara/recipes-api).\n\n### Features\n- REST resources design (routes)\n- Operation resources design (verbs)\n- Models: attributes, finder, etc\n- 1 to 1 model relation\n- 1 to N model relation\n- N to M model relation (adapation, see References)\n- Model validations\n- Custom validations\n- Controllers\n- JSON and XML views\n- i18n (internationalization): English and Spanish\n- Cache (only for fun, 5 seconds in GET methods. POST and PUT methods remove cache.)\n- Action composition\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Recipes",
			"item": [
				{
					"name": "GetRecipes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipes?page=1&maxRows=4",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipes"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "maxRows",
									"value": "4"
								}
							]
						},
						"description": "Returns a recipes list. Allow paging, with 10 recipes max per page. \n\nReturn formats: XML, JSON\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "SearchRecipes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipes/search?page=1&maxRows=9&title=Receta&ingredients=Carne, Zanahoria&price=0&kal=0",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipes",
								"search"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "maxRows",
									"value": "9"
								},
								{
									"key": "title",
									"value": "Receta"
								},
								{
									"key": "ingredients",
									"value": "Carne, Zanahoria"
								},
								{
									"key": "price",
									"value": "0"
								},
								{
									"key": "kal",
									"value": "0"
								}
							]
						},
						"description": "Search recipes by several fields:\r\n- title: search recipes which title contains the sent value. Method uses LIKE %% operator.\r\n- ingredients: coma separated names are allowed, case insensitive. Method uses OR operator.\r\n- price: search recipes which price is grater than the sent value\r\n- kal: search recipes which calories are grater than the sent value.\r\n\r\nReturns a recipes list. Allow paging, with 10 recipes max per page.\r\n\r\nReturn formats: XML, JSON\r\n\r\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "GetOneRecipe",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/1",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"1"
							]
						},
						"description": "Returns one recipe by their ID.\n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "AddRecipe",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Risotto de verduras\",\n    \"estimatedTime\": \"60min\",\n    \"imageUrl\": \"https://www.recetasderechupete.com/wp-content/uploads/2019/11/Risotto-verduras-525x360.jpg\",\n    \"howToMake\": \"PreparaciÃ³n de la base. Las verduras: Preparamos los ingredientes antes de empezar. Picamos la cebolla y el ajo. Troceamos los champiÃ±ones, el calabacÃ­n y los espÃ¡rragos. Echamos aceite en una satÃ©n honda y antiadherente y pochamos la cebolla hasta que transparente, removiendo de vez en cuando para que no se queme. Cuando la cebolla estÃ© pochada aÃ±adimos el ajo y el resto de las verduras. Echamos mÃ¡s aceite si es necesario, salpimentamos y espolvoreamos el romero.Removemos y rehogamos unos 15 minutos sin tapar y removiendo a ratos. Mientras se cocinan las verduras calentamos el caldo en un cazo o al microondas. PreparaciÃ³n de risotto de verduras: Cuando las verduras estÃ©n hechas, pero con un punto aÃºn crujiente incorporamos el arroz y removemos 1 minuto para que se empape bien con todos los sabores y suelte almidÃ³n que lo harÃ¡ mÃ¡s cremoso. AÃ±adimos el vino blanco y vamos removiendo hasta que veamos que se ha evaporado por completo. Usamos un cucharÃ³n para ir aÃ±adiendo el caldo muy poco a poco. Echamos un cucharÃ³n de caldo, removemos y no aÃ±adimos el siguiente hasta que veamos que el arroz lo ha absorbido casi del todo. Repetimos el proceso con el resto del caldo y aÃ±adimos el queso parmesano previamente rallado al echar el Ãºltimo cucharÃ³n de caldo. Removemos y apagamos cuando el arroz tenga un aspecto meloso con algo de caldo. En este caso, el arroz arborio se harÃ¡ en 15-16 minutos. Lo ideal es que el arroz quede â€œal denteâ€, ligeramente duro. Aunque aquÃ­ cada uno puede cocinarlo un poco mÃ¡s en funciÃ³n de sus gustos. Dejamos reposar 2 minutos para que se asienten los sabores. Para degustarlo, no hay tiempo que perder. Lo servimos caliente en la mesa, aprovechando ese punto cremoso tan delicioso.\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe"
							]
						},
						"description": "Creates one recipe. Title value must be unique. \n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "UpdateRecipe",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Receta 99999\",\n    \"estimatedTime\": \"30min\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe/1",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"1"
							]
						},
						"description": "Updates one recipe by their ID. Title value must be unique.\n\nThe verb of this method could be PATCH, because it allows partial updates. It means that you can send only the fields that you want to update. However is PUT, because this method didn't receive the \"PATCH format\" in body. Only receive a normal json format with the fields to update.\n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "DeleteRecipe",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/3",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"3"
							]
						},
						"description": "Delete one recipe by their ID. \n\nReturns an empty 200(ok) response in a successful delete."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4c172747-307e-41ef-ab5e-b835790e3a2f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bfbc5a2c-6427-40f8-93b0-b0b040a2d0c2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Recipes Additional Information",
			"item": [
				{
					"name": "GetAdditionalInformation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/122/additionalInformation",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"122",
								"additionalInformation"
							]
						},
						"description": "Returns additional information of one recipe by recipeId. \n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "GetOneAdditionalInformation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/additionalInformation/8",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"additionalInformation",
								"8"
							]
						},
						"description": "Returns one recipe additional information by additionalInformationId.\n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "AddAdditionalInformation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"difficulty\": \"easy\",\r\n    \"guests\": 2,\r\n    \"price\": \"15\",\r\n    \"kal\": \"190\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe/9/additionalInformation",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"9",
								"additionalInformation"
							]
						},
						"description": "Creates new additional information, and assign it to a recipe. \n\nIf the recipe would had additional information, it is deleted after assign the new one. \n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "UpdateAdditionalInformation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"difficulty\": \"medium\",\r\n    \"guests\": 12,\r\n    \"price\": \"1usd por persona\",\r\n    \"kal\": \"15 kal x cada 100g\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe/additionalInformation/6",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"additionalInformation",
								"6"
							]
						},
						"description": "Updates one recipe additional information by additionalInformationId.\n\nThe verb of this method could be PATCH, because it allows partial updates. It means that you can send only the fields that you want to update. However is PUT, because this method didn't receive the \"PATCH format\" in body. Only receive a normal json format with the fields to update.\n\nReturn formats: XML, JSON."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "89d45046-93f4-47ea-832d-65ac1494ebef",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "895cd3b5-3c1a-4f1e-b247-02d73946bd98",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Recipes Suggestions",
			"item": [
				{
					"name": "GetSuggestions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/4/suggestions",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"4",
								"suggestions"
							]
						},
						"description": "Returns all suggestions of one recipe by recipeId. \n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "GetOneSuggestion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/suggestion/1",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"suggestion",
								"1"
							]
						},
						"description": "Returns one suggestion by their ID.\n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "AddSuggestionToRecipe",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Consejo para 2\",\n    \"description\": \"Lorem ipsum dolor sit amet 2\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe/4/suggestion",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"4",
								"suggestion"
							]
						},
						"description": "Creates one suggestion for an specific recipe. \n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "UpdateSuggestion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"title\": \"Consejo 11111\",\n        \"description\": \"Lorem ipsum dolor sit amet 1111\"\n    }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe/suggestion/1",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"suggestion",
								"1"
							]
						},
						"description": "Updates one suggestion by their ID. \n\nThe verb of this method could be PATCH, because it allows partial updates. It means that you can send only the fields that you want to update. However is PUT, because this method didn't receive the \"PATCH format\" in body. Only receive a normal json format with the fields to update.\n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "DeleteSuggestion",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/suggestion/45",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"suggestion",
								"45"
							]
						},
						"description": "Delete one suggestion by their ID. \n\nReturns an empty 200(ok) response in a successful delete."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6287f0e8-b3ee-4928-aecf-468a4953e060",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4131d26f-5c8d-4b1f-bf1d-459d54ae2cbe",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Recipe Ingredients",
			"item": [
				{
					"name": "GetIngredients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/ingredients?page=1&maxRows=10",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"ingredients"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "maxRows",
									"value": "10"
								}
							]
						},
						"description": "Returns an ingredients list. Allow paging, with 10 recipes max per page. \n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "GetOneIngredient",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "en"
							}
						],
						"url": {
							"raw": "{{base-url}}/ingredient/5",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"ingredient",
								"5"
							]
						},
						"description": "Returns one ingredient by their ID. \n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "GetRecipeIngredients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/recipe/4/ingredients",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"4",
								"ingredients"
							]
						},
						"description": "Returns an ingredients list of a specific recipe.\n\nReturn formats: XML, JSON.\n\n**Remember, all GET methods are cached for 5 seconds.**"
					},
					"response": []
				},
				{
					"name": "Addingredient",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "es"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Fetuchini\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/ingredient",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"ingredient"
							]
						},
						"description": "Creates one ingredient. \n\nName must be unique. \n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "AddIngredientToRecipe",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"quantity\" : 2,\n\t\"measureUnit\": \"kilos\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe/5/ingredient/4",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"5",
								"ingredient",
								"4"
							]
						},
						"description": "Assigns one ingredient to one recipe. \n\nFields quantity and measureUnit can be set."
					},
					"response": []
				},
				{
					"name": "UpdateIngredient",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Zanahoria\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/ingredient/1",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"ingredient",
								"1"
							]
						},
						"description": "Updates one ingredient. Name must be unique.\n\nThe verb of this method could be PATCH, because it allows partial updates. It means that you can send only the fields that you want to update. However is PUT, because this method didn't receive the \"PATCH format\" in body. Only receive a normal json format with the fields to update.\n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "UpdateIngredientRecipe",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"quantity\" : 2,\n\t\"measureUnit\": \"units\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/recipe/4/ingredient/4",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"recipe",
								"4",
								"ingredient",
								"4"
							]
						},
						"description": "Update quantity and measureUnit fields of an specific ingredient of one recipe.\n\nThe verb of this method could be PATCH, because it allows partial updates. It means that you can send only the fields that you want to update. However is PUT, because this method didn't receive the \"PATCH format\" in body. Only receive a normal json format with the fields to update.\n\nReturn formats: XML, JSON."
					},
					"response": []
				},
				{
					"name": "DeleteIngredient",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base-url}}/ingredient/3",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"ingredient",
								"3"
							]
						},
						"description": "Removes an ingredient of an specific recipe. \n\nReturns an empty 200(ok) response in a successful delete."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2fc974cf-3703-44f3-9597-0afc5e894e1c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "10127e56-df22-4ffa-bc30-7f2401792171",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "612ad654-f674-46af-99b0-5d71287d4f4a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f641c03c-b03f-4a0b-9fe8-50400fafd432",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}